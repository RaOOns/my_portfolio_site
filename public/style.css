/* 웹 브라우저의 기본 스타일 초기화 ==============================================================*/
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

a, a:link, a:visited{
    color: inherit;
    text-decoration: none;
}

li{
    list-style: none;
}

/* 헤더 영역 ================================================================================== */
.container{            /* container 클래스가 있는 div 태그는 기준 너비를 유지하는 역할을 수행 */
    width: 1250px;
    margin: 0 auto;    /* 수평 방향에서 중앙에 위치하게 됨 */
}

header{
    position: fixed;     /* 스크롤로 내려도 고정되려면 fixed지만, JS로 부드럽게 하기위해 absolute*/
    color: black;
    background-color: white;
    top: 0;
    z-index: 1;    /* 스크롤로 내릴 경우 다른 것보다 위에 존재하도록 z-index를 높게 설정*/
    width: 100%;
    padding: 1rem;
}

header .container{
    display: flex;   /* 적용된 요소의 다음 요소가 항상 줄 바꿈 */
    justify-content: space-between;  /* 아이템들을 한 줄에 나열하면서 간격을 균등하게 배치*/
    align-items: center;   /* 수직 정렬 */
    width: 100%;
}

header nav ul{
    display: flex;
}

header nav ul li{
    padding: 10px;
}

header button{
    background: transparent;
    border: 0;
    cursor: pointer;
}

header h1 button{
    font-size: 3rem;
    font-weight: bold;
}

header nav ul li button{
    font-size: 2rem;
    font-weight: bold;
    margin: 0 10px;
}


/* 메인 영역 ============================================================================================ */
main{
    width: 100%;
    height: 100vh;
    color: black;
    /* background: linear-gradient(rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7)), url(https://avatars.githubusercontent.com/u/79679194?v=4) center center; */
    /* background-size: cover;
    background-repeat: no-repeat;
    border-radius: 50%; */
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}

main::before {
    width: min(70vw, 70vh);
    height: min(70vw, 70vh);                      /* 가상 요소의 높이와 넓이 != 이미지의 크기 */    
    content: "";                        /* 가상 요소의 텍스트 콘텐츠는 비움 즉, 시각적 목적으로만 활용 */
    background-image: url(https://avatars.githubusercontent.com/u/79679194?v=4);
    background-size: cover;             /* 이미지가 가상 요소 크기에 맞게 조절 */
    background-position: center;        /* 이미지를 가상 요소의 가운데 맞춤*/
    background-repeat: no-repeat;       /* 이미지가 반복 되어 나타나지 않게 조정 */
    border-radius: 50%;                 /* 가상 요소의 모서리를 둥굴게 */
    opacity: 0.2;                      /* 가상 요소의 투명도 */
    position: absolute;                 /* 가상 요소의 위치를 다른 요소으로부터 독립적으로 배치 */
    top: 50%;                           /* 가상 요소를 부모 요소의 세로 중앙에 위치 (가상 요소의 왼쪽 위 모서리 기준인듯) */
    left: 50%;                          /* 가상 요소를 부모 요소의 가로 중앙에 위치 (가상 요소의 왼쪽 위 모서리 기준인듯) */
    transform: translate(-50%, -50%);   /*중앙에 맞추기 위해 이동 */
    z-index: 1;                         /* 가상 요소의 쌓임? 순서 */
    
}

/* main의 내용이 가상요소 위에 나타나도록 우선순위 설정 */
main > * {
    z-index: 2;
}

main .container{
    display: flex;
    justify-content: center; /* 가로로 가운데 정렬 */
    align-items: center;      /* 세로로 가운데 정렬 */
    flex-direction: column;
}

main h4{
    font-size: 2.5rem;
}

main h2{
    font-size: 4.5rem;
    margin: 2rem 0;
    letter-spacing: 3px;
}

main p{
    max-width: 600px;
    margin: 2rem auto;
    font-size: 1.5rem;
    /* font-weight: bold; */
}

main .urlbox{
    background-color: rgba(255, 255, 255, 0.5);
    border: 3px solid black;
    border-radius: 20px;
    margin: 5rem 0 0 0;
    padding: 1rem 2rem;
    max-width: 600px;
    font-size: 2.3rem;
}

main .urlbox img{
    width: 2rem; /* 부모 요소의 너비에 맞춤 */
    height: 2rem; /* 부모 요소의 높이에 맞춤 */
    object-fit: cover; /* 부모 요소에 맞게 이미지를 자르거나 크기를 조정 */
}



main button.arrow{
    background-color: transparent;
    border: none;
    color: black;
    font-size: 2rem;
    position: absolute;
    bottom: 1rem;
    left: 50%;
    transform: translateX(-50%);
    animation: upDown 1s ease-in-out infinite;
    cursor: pointer;
}

@keyframes upDown{
    0%{
        bottom: 1rem;
    }
    50%{
        bottom: 1.5rem;
    }
    100%{
        bottom: 1rem;
    }
}

main h2 span::after{
    content: "";
    height: 45px;
    width: 3px;
    background-color: black;
    display: inline-block;
    animation: blink .7s ease-in-out infinite;
}

@keyframes blink{
    0%{
        opacity: 1;
    }
    100%{
        opacity: 0;
    }
}



/* Section 부분 =================================================================================================== */
section{
    font-family: "Poppins", sans-serif;
    padding: 5rem 0;
}

section:nth-child(2n){
    background-color: #f8f8f8;
}


section .title{
    margin-bottom: 2rem;
    /* background-color: yellow; */
}


section .title h4{
    font-size: 2rem;
    color: black;
    font-weight: bold;
    position: relative;
}

/* Section - About Me 부분 =================================================================================================== */

/* 본문을 좌우로 나누기 위해서는 float속성으로 레이아웃을 분할하고 각각 너비의 절반씩을 차지하도록 지정
   float 속성은 적용 대상의 원래 위치를 보장하지 않기에, 먼저 clear 속성으로 float 속성을 해제 */

/* float 속성 해제 */
section .aboutme-self::after{
    content: "";
    clear: both;
    display: block;
}

/* 본문 너비 절반 지정 & 왼쪽 배치 -----------------------------------------------------------------------*/
section .aboutme-self .left{
    width: 57%;
    height: 60vh;
    margin-right: 3%;
    float: left;
    /* border: 2px solid rgb(215, 213, 213); */
    border-radius: 10px;
    /* background-color: blue; */
}

section .aboutme-self .left .grid-container{
    display: grid;
    height: 98%;
    grid-template-columns: 60% 40%;
    grid-template-rows: 40% 60%;
    gap: 1rem;
    padding: 0;
    margin: 0;                    
    box-sizing: border-box;                 /* 패딩이 전체 크기에 포함되도록 설정 */
}


section .aboutme-self .left .grid-item {
    /* background-color: lightblue; */
    border: 2px solid rgb(215, 213, 213);
    padding: 1rem;
    margin: 0;
}

section .aboutme-self .left .item1{
    grid-column: span 2;
}

section .aboutme-self .left .grid-item:nth-child(2),
section .aboutme-self .left .grid-item:nth-child(3){
    justify-content: center;
    align-items: center;
    padding: 0;
    margin: 0;
}

section .aboutme-self .left .grid-item h2{
    margin-top: 1rem;
    margin-bottom: 2rem;
}

section .aboutme-self .left .grid-item h3{
    margin-bottom: 0.3rem;
}

section .aboutme-self .left .grid-item img{
    width: 100%;
    height: auto;
    padding: 1rem;
    margin: 0;
}

section .aboutme-self .left .grid-item .spider{
    display: flex;
    justify-content: center; /* 가로 중앙 정렬 */
    align-items: center; /* 세로 중앙 정렬 */
    width: 100%;
    height: 100%;    
    padding: 0;
    margin: 0;
    /* background-color: red; */
}

section .aboutme-self .left .grid-item .barchart{
    width: 100%;
    height: 30%;    
    /* background-color: blue; */
}

section .aboutme-self .left .grid-item .myimg{
    width: 100%;
    height: 70%;    
    /* background-color: green; */
}


/* 본문 너비 절반 지정 & 오른쪽 배치 -----------------------------------------------------------------------*/
section .aboutme-self .right{
    width: 40%;
    height: 60vh;
    float: left;
    padding: 0 1rem;
    border: 2px solid rgb(215, 213, 213);
    border-radius: 10px;
}

section .aboutme-self .right .conbox-container{
    width: 100%;
    height: 100%;
    /* background-color: green; */
}

section .right input[type="radio"] {
    display: none;
}

section .right label[for*="tab"] {
    display: inline-block;
    width: 25%;
    height: 30px;
    margin: 15px 0;
    padding: 0 10px;
    cursor: pointer;
    /* background-color:white; */
    color: gray;
    border-left: 1px solid gray;
    text-align: center;
    font-size: 1.2rem;
    font-weight: bold;
    text-align: left;
    justify-content: center; /* 가로 중앙 정렬 */
    align-items: center;
}

section .right input[id*="tab"]:checked + label {
    color: black;
    text-decoration: underline;
}


section .aboutme-self .right .conbox {
    width: 100%; 
    display: none;
    padding: 0.5rem; 
    box-sizing: border-box;
}

section .aboutme-self .right input[id="tab1"]:checked ~ .con1 {
    display: grid;
    grid-template-rows: repeat(5, auto);
}

section .aboutme-self .right input[id="tab2"]:checked ~ .con2 {
    display: grid;
    grid-template-rows: repeat(4, auto);
}

section .aboutme-self .right input[id="tab3"]:checked ~ .con3 {
    display: grid;
    grid-template-rows: repeat(6, auto);
   
}

section .aboutme-self .right .grid-item:nth-child(2n+1){
    border-bottom: 1px solid gray;
    font-weight: bold;
    font-size: 1.2rem;
    padding: 0.1rem 0.5rem;
    margin-top: 0.5rem;
    background-color: #f8f8f8;
}

section .aboutme-self .right .grid-item:nth-child(2n){
    padding: 0.7rem 0 1.5rem 0.5rem;
    font-size: 1.1rem;
    justify-content: center;
    align-items: center;
}


section .aboutme-self .right ul {
    margin-left: 1rem;
}

section .aboutme-self .right ul li{
    list-style-type: circle; /* 원형 글머리 기호를 사용 */
    margin-bottom: 0.5rem;
}

section .aboutme-self .right ul li::marker{
    color: gray;
    font-size: 0.8rem;
}

section .aboutme-self .right .con1 .grid-item:nth-child(6),
section .aboutme-self .right .con1 .grid-item:nth-child(8){
    display: flex;   /* 적용된 요소의 다음 요소가 항상 줄 바꿈 */
    justify-content: space-between;  /* 아이템들을 한 줄에 나열하면서 간격을 균등하게 배치*/
    align-items: center;   /* 수직 정렬 */
}


section .aboutme-self .right i{
    font-size: 2rem;
}

section .aboutme-self .right img{
    width: 2rem;
    height: 2rem;
}


section .aboutme-self .right .grid-item a:hover{
    text-decoration: underline;
}

/* Section - Project 부분 =================================================================================================== */

/* clear 속성으로 float 속성값 해제 */
section.project:after{
    content: "";
    display: block;
    clear: both;
}

/* project-inner 사각형 꾸미기 */
section.project .project-inner{
    width: 23.5%;
    height: 25vh;
    margin-right: 2%;
    padding: 1rem 1rem 1.5rem 1rem;
    float: left;
    background-color: #f8f8f8;
    border: 1px solid #ccc;
    margin-bottom: 3rem;
}

/* 4번째마다 margin-right 0 적용 */
section.project .project-inner:nth-child(4n){
    margin-right: 0;
}

/* 이미지 크기가 부모 요소를 넘지 않도록 100% 지정 */
section.project .project-inner img{
    width: 100%;
    height: 15vh;
    display: block;
}

/* strong 태그 색상과 간격 */
section.project .project-inner strong{
    color: #ff6a6a;
    margin: 0.5rem 0;
    display: block;
}

/* h3 태그 색상과 간격 */
section.project .project-inner h3{
    font-size: 1rem;
}



/* Section - Contact Me 부분 =================================================================================================== */
section.contactme .contactme-me::after{
    content: "";
    display: block;
    clear: both;
}

section.contactme .contactme-me .left{
    width: 30%;
    float: left;
}

section.contactme .contactme-me .left .card{
    border: 1px solid #ccc;
    padding: 1rem;
    display: flex;
    align-items: center;
    margin-bottom: 1.25rem;
}

section.contactme .contactme-me .left .card .icon i{
    font-size: 2rem;
    margin-right: 15px;
}

section.contactme .contactme-me .left .card .urls{
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
}

section.contactme .contactme-me .left .card .urls i{
    font-size: 2.4rem;
    margin-right: 15px;
}

section.contactme .contactme-me .left .card .urls img{
    width: 2rem; /* 부모 요소의 너비에 맞춤 */
    height: 2rem; /* 부모 요소의 높이에 맞춤 */
    object-fit: cover; /* 부모 요소에 맞게 이미지를 자르거나 크기를 조정 */
    margin-right: 15px;
}


section.contactme .contactme-me .right{
    width: 65%;
    float: left;
    margin-left: 5%;
    margin-bottom: 2rem;
    border: 1px solid #ccc;
    padding: 1rem;
}

/* form-group 사이 간격 지정 */
section.contactme .contactme-me .right .form-group{
    margin-bottom: 1.25rem;
}

/* label 태그가 인라인 성격이어서 외부 여백을 적용하기 위해 block으로 변경 */
section.contactme .contactme-me .right .form-group label{
    display: block;
    margin-bottom: 0.85rem;
}

/* input 요소 꾸미기 */
section.contactme .contactme-me .right .form-group input{
    padding: 0.625rem;
    width: 100%;
    outline: none;
    border: 1px solid #ccc;
    border-radius: 10px;
}

/* :focus 가상 클래스 선택자로 입력 요소에 커서가 활성화되면 파란색 테두리와 그림자 효과 추가 */
section.contactme .contactme-me .right .form-group input:focus{
    border: 1px solid #719ECE;
    box-shadow: 0 0 10px #719ECE;
}

/* textarea 요소 꾸미기 */
section.contactme .contactme-me .right .form-group textarea{
    height: 300px;
    width: 100%;
    padding: 1rem;
    resize: none;
    border: 1px solid #ccc;
    border-radius: 10px;
}

/* textarea 요소에 커서가 활성화 되면 파란색 테두리와 그림자 효과 추가 */
section.contactme .contactme-me .right .form-group textarea:focus{
    outline: none;
    border: 1px solid #718ECE;
    box-shadow: 0 0 10px #719ECE;
}

/* 버튼 요소 꾸미기 */
section.contactme .contactme-me .right button{
    width: 100%;
    font-size: 1rem;
    font-weight: bold;
    padding: 1rem;
    background-color: black;
    border: none;
    color: white;
}



/* 반응형 웹 만들기 =================================================================================================== */
/* 
-   여기서 container 클래스의 width을 1140px로 설정했기에 이를 기준으로 시작
-   위의 font-size, margin, padding 의 단위를 rem으로 했으며 rem은 html태그의 font-size 속성에 영향을 받으므로 
    이를 수정하면 화면의 크기에 따라 일정하게 변함
-   main영역과 section영역의 container 기준 너비를 변경
-   About Me 영역의 왼쪽과 오른쪽의 너비를 100%로 변경
-   Project 영역의 2x4 구조를 1140px이하에서는 4x2 992px이하부터는 8x1로 변경 
-   Contact Me 영역도 본문이 2단으로 분리되지 않도록 변경
-   1140px 이하일때 기준으로 설정해 놓으면 그 이하의 경우 비율만 유지하면 됨
 */

/* 화면 너비가 1140px 이하인 경우 */
@media screen and (max-width: 1140px){

    header h1 button{
        font-size: 2rem;
        font-weight: bold;
    }
    
    header nav ul li button{
        font-size: 1rem;
        font-weight: bold;
        margin: 0 10px;
    }

    main .container{
        width: 992px;
    }

    section .container{
        width: 600px;
    }

    section .aboutme-self .left{
        width: 100%;
    }

    section .aboutme-self .right{
        width: 100%;
        margin-top: 10px;
        padding: 0;
        border-radius: 0;
    }

    section .project-me .project-inner{
        width: 48%;
        margin-right: 0;
    }

    section .project-me .project-inner:nth-child(2n+1){
        margin-right: 4%;
    }

    section.contactme .contactme-me .left{
        width: 100%;
    }

    section.contactme .contactme-me .right{
        width: 100%;
        margin-left: 0;
    }

}

/* 화면 너비가 992px 이하인 경우 */
@media screen and (max-width: 992px){
    html{
        font-size: 14px;
    }

    main .container{
        width: 768px;
    }

    section .project-me .project-inner{
        width: 100%;
    }
    
}

/* 화면 너비가 768px 이하인 경우 */
@media screen and (max-width: 768px){
    html{
        font-size: 13px;
    }

    main .container{
        width: 576px;
    }

    section .container{
        width: 400px;
    }

}

/* 화면 너비가 576px 이하인 경우 */
@media screen and (max-width: 576px){
    html{
        font-size: 12px;
    }

    main .container{
        width: 400px;
    }

    section .container{
        width: 360px;
    }

}

/* 화면 너비가 400px 이하인 경우 */
@media screen and (max-width: 400px){
    html{
        font-size: 11px;
    }

    main .container{
        width: 320px;
    }

    section .container{
        width: 320px;
    }

    main h4{
        font-size: 1.5rem;
    }

    section .title h2{
        font-size: 3rem;
    }

}
