/* ====================================== Main and Body ====================================== */
body{
    display: flex;
    flex-direction: column;
    margin: 0;
    padding: 0;
    /* height: 100vh; */
    /* width: 100vw; */
    /* overflow: hidden; */
    overflow: auto;
    
}

main{
    display: flex;
    flex-direction: column;
    min-width: 1340px;
    min-height: 100vh; /* 전체 화면 높이 */
    overflow: auto;
}

/* ====================================== header  ====================================== */
header {
    display: flex;
    height: 7vh; /* 고정된 높이, 화면 높이의 15% */
    min-height: 50px; /* 최소 높이 */
    background-color: white;
    justify-content: center;
    align-items: center;
}

.header-btn {
    margin: 0 50px;                 /* margin: 바깥 여백 (all) (상하,좌우) (상, 좌우, 하) (상,우,하,좌) */
    padding: 0px;                   /* padding: 안쪽 여백 */
    border: none;
    background-color: white;
    cursor: pointer;                /* 마우스 올릴 시 포인트 변화 */
    font-size: 2rem;
    font-weight: 600;
    color: black;
}

/* header-btn에 마우스 올렸을 시 변화 */
.header-btn:hover {
    text-decoration: underline;         /* 밑줄 추가 */
    color: red;
    text-decoration-color: red;       /* 밑줄 색상 */
    text-decoration-thickness: 2px;     /* 밑줄 두께 */
}

/* header-btn이 눌리는 순간의 변화 */
.header-btn:active {
    transform: scale(0.90);             /* 버튼을 축소 */
}


/* ====================================== section ====================================== */
section {
    display: flex;
    /* height: 83vh; */
    flex: 1;
    min-height: 540px; /* 최소 높이 */
    background-color: white;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    position: relative; /* 가상 요소가 부모 요소 내에서 배치되도록 설정 */
    overflow: hidden; /* 가상 요소가 섹션을 넘어서지 못하도록 설정 */
}

/* Section에 배경 추가 가상요소(::before) 사용 시 구조를 무너뜨리지 않을 수 있음 */
section::before {
    display: flex;
    height: 80%;                      /* 가상 요소의 높이와 넓이 != 이미지의 크기 */
    aspect-ratio: 1;                
    content: "";                        /* 가상 요소의 텍스트 콘텐츠는 비움 즉, 시각적 목적으로만 활용 */
    background-image: url(https://avatars.githubusercontent.com/u/79679194?v=4);
    background-size: cover;             /* 이미지가 가상 요소 크기에 맞게 조절 */
    background-position: center;        /* 이미지를 가상 요소의 가운데 맞춤*/
    background-repeat: no-repeat;       /* 이미지가 반복 되어 나타나지 않게 조정 */
    border-radius: 50%;                 /* 가상 요소의 모서리를 둥굴게 */
    opacity: 0.5;                      /* 가상 요소의 투명도 */
    position: absolute;                 /* 가상 요소의 위치를 다른 요소으로부터 독립적으로 배치 */
    top: 50%;                           /* 가상 요소를 부모 요소의 세로 중앙에 위치 (가상 요소의 왼쪽 위 모서리 기준인듯) */
    left: 50%;                          /* 가상 요소를 부모 요소의 가로 중앙에 위치 (가상 요소의 왼쪽 위 모서리 기준인듯) */
    transform: translate(-50%, -50%);   /*중앙에 맞추기 위해 이동 */
    z-index: 1;                         /* 가상 요소의 쌓임? 순서 */
    overflow: hidden;
    
}

/* section의 내용이 가상요소 위에 나타나도록 우선순위 설정 */
section > * {
    z-index: 2;
}


/* About Me 컨테이너 부분 */
#AM-container{
    display: none;
    /* background-color: green; */
    /* overflow: auto; */
}

#AM-container.active{
    display: flex;
    flex-direction: row;
    position: absolute; /* 부모 요소에 상대적인 위치 설정 */
    width: 80%;
    height: 90%;
    /* overflow: auto; */
}

/* About Me 중 왼쪽 부분 설정 - Grid로 구성 */
#AM-left{
    width:50%;
    /* height: 100%; */
    /* background-color: orange; */
    display: grid;
    grid-template-columns: 70% 30%;
    grid-template-rows: 35% 15% 50%;
    /* position: relative; 절대 위치를 설정하기 위해 relative 필요 */
}

#AM-left > .grid-item{
    background-color: white;
    /* position: relative; grid-item 내에 이미지 위치 고정 */
    /* overflow: hidden; 그리드 셀에서 넘치는 부분을 숨김 */
}

#AM-left > .grid-item2{
    display: flex;
    background-color: white;
    grid-column: 1/3;

}

#AM-left > .grid-item  > h1{
    font-size: 3rem;
    letter-spacing: 1rem;
}

#AM-left > .grid-item  > h2{
    font-size: 2rem;
    /* letter-spacing: 1rem; */
}

#AM-left > .grid-item  > h5{
    font-size: 1.2rem;
    /* letter-spacing: 1rem; */
}

#AM-left > .grid-item  > h1, h2, h3, h4, h5, h6{
    display: inline-block;
    padding: 0 0 0 30px;
    margin: 2.2rem 0 0 0;
}

#AM-left > .grid-item  > img{
    display: block; /* 이미지를 블록 요소로 설정하여 여백 제거 */
    max-width: 100%; /* 이미지의 최대 너비를 grid-item에 맞춤 */
    max-height: 100%; /* 이미지의 최대 높이를 grid-item에 맞춤 */
    background-color: white;
    object-fit: contain;
}

#AM-left > .grid-item2 > .table-container{
    /* position: absolute; 테이블을 그리드 위에 겹치게 만듬 */
    width: 100%;
    margin: 5px 0px;
    /* display: block; */
    /* height: 100%; */
    /* top: 37%; */
    background-color: rgb(159, 158, 158, 0.2); 
}

#AM-left > .grid-item2 > .table-container > table{
    width: 100%;
    height: 90%;
    table-layout: fixed;
    text-align: center;
    justify-content: center; /* 가로 중앙 정렬 */
    align-items: center;

}

#AM-left > .grid-item2 > .table-container tr:nth-child(1) {
    font-size: 1rem; 
    font-weight: 600;
}

#AM-left > .grid-item2 > .table-container tr:nth-child(2) {
    font-size: 2.5rem; 
    font-weight: 900; 
    /* font-family: 'Gmarket Sans', sans-serif; */
}


/* ConBox 부분 */
#AM-left > .grid-item2 > .conbox-container {
    background-color: white;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

#AM-left > .grid-item2 input[type="radio"] {
    display: none;
}

#AM-left > .grid-item2 label[for*="tab"] {
    display: inline-block;
    width: 15%;
    height: 8%;
    margin: 0px;
    /* padding: 0.3rem 0.18rem; */
    cursor: pointer;
    background-color:white;
    color: black;
    border: 1px solid gray;
    text-align: center;
    font-size: 1rem;
    font-weight: 700;
    box-sizing: border-box;
    text-align: center;
    justify-content: center; /* 가로 중앙 정렬 */
    align-items: center;
}

#AM-left > .grid-item2 input[id*="tab"]:checked + label {
    background-color: darkred;
    color: white;
}

#AM-left > .grid-item2 .conbox-container > .conbox {
    width: 100%; 
    height: 90%;
    /* flex-grow:1; */
    display: none; 
    background-color: white;
    box-sizing: border-box;
}


#AM-left > .grid-item2 input[id="tab1"]:checked ~ .con1 {
    display: grid;
    grid-template-columns: 20% 80%;
    grid-template-rows: repeat(4, 1fr) 4fr;
}

#AM-left > .grid-item2 input[id="tab2"]:checked ~ .con2 {
    display: grid;
    /* height: 35%; */
    grid-template-columns: 20% 80%;
    grid-template-rows: repeat(5, 1fr);
    /* background-color:skyblue; */
}
#AM-left > .grid-item2 input[id="tab3"]:checked ~ .con3 {
    display: grid;
    grid-template-columns: 25% 75%;
    grid-template-rows: 3fr 1fr 2.5fr;
    /* background-color:green; */
}

#AM-left > .grid-item2 .grid-item:nth-child(2n+1) {
    display: flex; /* Flexbox를 사용하여 세로 정렬 */
    border-bottom: 1px solid gray;
    margin: 0;
    padding: 0 20px;
    font-size: 1rem;
    font-weight: bold;
    color: black;
    justify-content: left; /* 가로 중앙 정렬 */
    align-items: center;
    text-align: left;
}

#AM-left > .grid-item2 .grid-item:nth-child(2n) {
    display: flex; /* Flexbox를 사용하여 세로 정렬 */
    border-bottom: 1px solid gray;
    margin: 0;
    padding: 0 20px;
    font-size: 1rem;
    font-weight: bold;
    color: black;
    justify-content: right; /* 가로 중앙 정렬 */
    align-items: center;
    text-align: right;
    
}

#AM-left > .grid-item2 .grid-item2 {
    display: flex; /* Flexbox를 사용하여 세로 정렬 */
    border-bottom: 1px solid gray;
    margin: 0;
    padding: 0 20px;
    font-size: 0.9rem;
    font-weight: bold;
    color: black;
    align-items: center;
    text-align: left;
    
}

#AM-left > .grid-item2 img{
    width: 1.2rem;
    height: 1.2rem; 
    margin: 0 0.5rem;
}

#AM-left > .grid-item2 i{
    font-size: 1.2rem;
    /* color: white; */
    margin: 0 0.5rem
}


/* About Me 중 오른쪽 부분 설정 */
#AM-right{
    display: flex; /* Flexbox 컨테이너로 설정 */
    width:50%;
    justify-content: center; /* 가로 중앙 정렬 */
    align-items: center;
    text-align: center;
    background-color: white;
}


#spider-chart-container{
    width: 90%;
    aspect-ratio: 1 / 1;  
    /* width: 100vw; */
    /* height: 500px;     */
    background-color: white;
}


#PJ-container{
    display: none;
    background-color: white;
    /* overflow: auto; */
}

#PJ-container.active{
    display: flex;
    flex-direction: row;
    position: absolute; /* 부모 요소에 상대적인 위치 설정 */
    width: 80%;
    height: 90%;
    justify-content: center; /* 가로 중앙 정렬 */
    align-items: center;
    text-align: center;
}


#PJ-container > .grid-container{
    display: grid;
    background-color: whitesmoke;
    grid-template-columns: repeat(4, 1fr);  /* 5개의 동일한 너비의 그리드 열 생성 */
    grid-template-rows: repeat(2, 1fr);     /*2개의 동일한 높이의 그리드 행 생성  */
    width: 100%;                             /* 그리드 레이아웃 너비를 부모 요소의 100% 사용 */
    height: 100%;                            /* 그리드 레이아웃 높이를 부모 요소의 100% 사용 */
    column-gap: 3rem;                       /* 그리드 아이템 간 간격 */
    row-gap: 3rem;
    padding: 1.25rem 1.875rem;                     /* 그리드 레이아웃 내의 내부 여백 */
    box-sizing: border-box;                 /* 패딩이 전체 크기에 포함되도록 설정 */
    /* margin: 0 0 0 5%; */
}

#PJ-container > .grid-container > .grid-item { 
    background-color: white;           
    height: auto; /* 높이를 자동으로 설정하여 콘텐츠에 맞게 조정 */
    border: 3px solid gray;             /* 경계를 추가 */
    /* margin: 12% 0 0 0; */
    display: flex;                        /* 내부 요소가 중앙에 배치되도록 설정 */
    justify-content: center;
    align-items: center;
    text-align: center;
    max-width: 100%; /* 그리드 아이템의 최대 너비를 그리드 셀 크기로 제한 */
    max-height: 100%; /* 그리드 아이템의 최대 높이를 그리드 셀 크기로 제한 */
    position: relative; /* 포지션을 relative로 설정하여 내부 요소의 절대 위치 설정 가능 */
    cursor: pointer;
    overflow: hidden;
}

#PJ-container > .grid-container > .grid-item img{
    background-size: cover;             /* 이미지가 가상 요소 크기에 맞게 조절 */
    background-position: center;        /* 이미지를 가상 요소의 가운데 맞춤*/
    background-repeat: no-repeat;       /* 이미지가 반복 되어 나타나지 않게 조정 */
}


/* ====================================== footer ====================================== */
footer {
    display: flex;
    background-color: white;
    flex-direction: column;
    height: 15vh; /* 고정된 높이, 화면 높이의 10% */
    min-height: 100px; /* 최소 높이 */
    align-items: center;
    justify-content: center;
    text-align: center;
    font-weight: bold;
    font-size: 1.5rem;
}


footer img {
    width: 2rem; /* 부모 요소의 너비에 맞춤 */
    height: 2rem; /* 부모 요소의 높이에 맞춤 */
    object-fit: cover; /* 부모 요소에 맞게 이미지를 자르거나 크기를 조정 */
}

footer  i {
    font-size: 2rem;
}

footer > a {
    text-decoration: none;
}

footer > .grid-container{
    display: grid;
    background-color: white;
    grid-template-columns: repeat(4, 5rem);  /* 5개의 동일한 너비의 그리드 열 생성 */
    grid-template-rows: 3rem;     /*2개의 동일한 높이의 그리드 행 생성  */
}

footer > .grid-container > .grid-item{
    background-color: white;           
    height: auto; /* 높이를 자동으로 설정하여 콘텐츠에 맞게 조정 */
    display: flex;                        /* 내부 요소가 중앙에 배치되도록 설정 */
    justify-content: center;
    align-items: center;
    text-align: center;
    max-width: 100%; /* 그리드 아이템의 최대 너비를 그리드 셀 크기로 제한 */
    max-height: 100%; /* 그리드 아이템의 최대 높이를 그리드 셀 크기로 제한 */
    position: relative; /* 포지션을 relative로 설정하여 내부 요소의 절대 위치 설정 가능 */
    cursor: pointer;
    overflow: hidden;
}




/* ====================================== @media part ====================================== */
@media (max-width: 450px) {
    body, main {
        /* overflow-x: none; 가로 및 세로 스크롤 허용 */
        overflow: auto; /* 가로 및 세로 스크롤 허용 */
        width: 100%;
        min-width: 400px;
    }

    .header-btn{
        font-size: 1.5rem;
    }
    /* #AM-container{
        display: flex;
        overflow: auto;
    } */

    #AM-container.active{
        display: flex;
        flex-direction: column;
        overflow: auto; /* 가로 및 세로 스크롤 허용 */
        width: 100%;
        height: 90%;
        /* justify-content: center; */
        align-items: center;
        /* height: auto; */

    }

    #AM-left{
        width: 95%;
        /* max-height: 100vh; */
        /* grid-template-columns: 70% 30%; */
        grid-template-rows: 180px 100px auto;
    }
    
    
    #AM-left > .grid-item  > h1{
        font-size: 1rem;
        letter-spacing: 1rem;
    }
    
    #AM-left > .grid-item  > h2{
        font-size: 1rem;
        /* letter-spacing: 1rem; */
    }
    
    #AM-left > .grid-item  > h5{
        font-size: 0.8rem;
        /* letter-spacing: 1rem; */
    }

    #AM-left > .grid-item  > h1, h2{
        display: inline-block;
        font-size: 6vw;
        padding: 0 0 0 30px;
        margin: 0px -10px 0px -10px;
    }

    #AM-left > .grid-item  > h3, h4, h5, h6{
        display: inline-block;
        font-size: 2.5vw;
        padding: 0 0 0 30px;
    }


    #AM-left > .grid-item2 > .table-container tr:nth-child(1) {
        font-size: 0.8rem; 
        font-weight: 600;
    }
    
    #AM-left > .grid-item2 > .table-container tr:nth-child(2) {
        font-size: 1.8rem; 
        font-weight: 900; 
        /* font-family: 'Gmarket Sans', sans-serif; */
    }
    
    /* #AM-left > .grid-item2 > .conbox-container .grid-item2  {
        font-size: 0.7rem;        
    } */

    #AM-left > .grid-item2 label[for*="tab"] {
        height: 30px;
    }

    #AM-left > .grid-item2 .conbox-container > .conbox {
        background-color: rgba(203, 203, 203, 0.15);
    }

    #AM-right{
        width: 95%;
    }

    #spider-chart-container{
        width: 100%;
        /* height: auto; */
        aspect-ratio: 1 / 1;  
    }


    #PJ-container{
        overflow: auto; /* 가로 및 세로 스크롤 허용 */
    }
    
    
    #PJ-container > .grid-container{
        display: grid;
        /* background-color: ; */
        grid-template-columns: repeat(1, 1fr);  /* 5개의 동일한 너비의 그리드 열 생성 */
        grid-template-rows: repeat(8, 200px);     /*2개의 동일한 높이의 그리드 행 생성  */
        width: 100%;                             /* 그리드 레이아웃 너비를 부모 요소의 100% 사용 */
        height: 100%;                            /* 그리드 레이아웃 높이를 부모 요소의 100% 사용 */
        column-gap: 3rem;                       /* 그리드 아이템 간 간격 */
        row-gap: 1rem;
        padding: 1.25rem 1.875rem;                     /* 그리드 레이아웃 내의 내부 여백 */
        box-sizing: border-box;                 /* 패딩이 전체 크기에 포함되도록 설정 */
        /* margin: 0 0 0 5%; */
    }

}